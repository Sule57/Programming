#include <iostream>
#include <vector>

using namespace std;

class Vector {
    private:
        int vectorDimension;
        float initializationValue;
        vector < float > data;
    public:
        void initializeVector (int dimension = 0, float value = 0.) {
            if (dimension == 0) {
                vectorDimension = 2;
                return;
            }
            else
            vectorDimension = dimension;

            for (int i = 0; i < vectorDimension; i++) {
                data.push_back(value);
            }
        }

        float getData(int index) {
            if (index >= 0 && index < data.size())
                return data[index];
            else {
                cout << "The index: " << index << " doesn't exist in the specified vector" << endl;
            }
        }

        float setData (float value, int index) {
            if (index >= 0 && index < data.size())
                data[index] = value;
            else {
                cout << "The index: " << index << " doesn't exist in the specified vector" << endl;
            }
        }
        //TESTING CONSTRUCTOR, DELETE LATER!
        int getSize() {
            return data.size();
        }
};


int main() {
    Vector newVect;
    newVect.initializeVector(4);
    newVect.setData(2.6, 2);
    for (int i = 0; i < newVect.getSize(); i++) {
        cout << newVect.getData(i) << endl;
    }

    return 0;
}
